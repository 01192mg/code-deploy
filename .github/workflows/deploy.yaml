name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PROJECT_NAME: code-deploy
  S3_BUCKET_NAME: week05
  RESOURCE_PATH: ./src/main/resources/application.yaml
  CODE_DEPLOY_APPLICATION_NAME: mingyu-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: mingyu-server

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: abc
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.profiles.active: ${{ secrets.PROFILE }}
        cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY }}
        cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_KEY }}
        cloud.aws.s3.bucket: ${{ secrets.AWS_BUCKET }}
        cloud.aws.s3.region: ${{ secrets.AWS_REGION }}

        spring.datasource.url: ${{ secrets.AWS_RDS_URL }}
        spring.datasource.username: ${{ secrets.AWS_RDS_USERNAME }}
        spring.datasource.password: ${{ secrets.AWS_RDS_PASSWORD }}
        spring.config.import:

        jwt.secret: ${{ secrets.JWT_SECRET_KEY }}

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash

    - name: Build with Gradle
      run: ./gradlew build -x test
      shell: bash

    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.AWS_BUCKET }}/$GITHUB_SHA.zip
      
    - name: Code Deploy
      run: |
        aws deploy create-deployment \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
